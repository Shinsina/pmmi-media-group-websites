import { get, getAsArray } from "@parameter1/base-cms-object-path";
import contentIframe from "@pmmi-media-group/package-global/utils/content-iframe";
import getContentPreview from "@parameter1/base-cms-marko-web-theme-monorail/utils/get-content-preview";

$ const { site, contentGatingHandler, req, i18n } = out.global;
$ const { id, type, pageNode, showReadNextBlock, showBottomAdBlock, showTopStoryBlock, ...rest } = input;
$ const sections = getAsArray(input, "sections");

$ const leadersContentTypes = input.leadersContentTypes || ["article", "blog", "media-gallery", "news", "podcast", "press-release", "product", "video", "webinar"];
$ const displayPrimaryImage = ["media-gallery", "document", "podcast"].includes(type) ? false : true;
$ const displayPublishedDate = ["company", "contact", "whitepaper"].includes(type) ? false : true;
$ const displayReadNext = showReadNextBlock && ["article"].includes(type);
$ const displaySocialShare = ["contact"].includes(type) ? false : true;
$ const displayComments = false; // ["contact"].includes(type) ? false : true;
$ const displayNewsletterSignup = ["contact"].includes(type) ? false : true;
$ const continueLabel = i18n("Sign Me Up!");
$ const loginEmailLabel = i18n("Work Email");
$ const gateTitle = i18n("Log in to view the full article")
$ const gateButtonLabels = { continue: i18n("Continue") };
$ const gateEmailLabel = i18n("Email Address");
$ const actionText = i18n("signing up to receive your email notifications");
$ const buttonLabels = { continue: continueLabel };
$ const shouldInjectAds = ["article", "blog", "news", "podcast", "press-release", "product", "video"].includes(type);

<global-content-wrapper-layout
  id=id
  type=type
  page-node=pageNode
  ...rest
>
  <@section|{ aliases }| modifiers=["first-sm"]>
    <theme-gam-define-display-ad
      name="leaderboard"
      position="content_page"
      aliases=aliases
      modifiers=["inter-block"]
    />
    <theme-gam-wallpaper-ad aliases=aliases position="content_page" />
  </@section>

  <@section|{ blockName, content, aliases, authors }| modifiers=["content-header"]>
    $ const { primarySection } = content;
    <div class="content-page-header">
      <theme-content-page-breadcrumbs section=primarySection />
      <marko-web-content-name tag="h1" block-name=blockName obj=content />
      <marko-web-content-teaser tag="p" class="page-wrapper__deck" obj=content />
      <if(type !== "contact")>
        <theme-content-attribution obj=content />
      </if>
      <if(displayPublishedDate)>
        <theme-page-dates|{ blockName }|>
          <theme-content-published-node block-name=blockName obj=content />
        </theme-page-dates>
      </if>
      <global-sponsored-section-logo alias=primarySection.alias modifiers=["content-page"] class="mt-3" />
      <if(displaySocialShare)>
        <marko-web-social-sharing
          path=content.siteContext.path
          providers=["print", "facebook", "linkedin", "twitter", "pinterest"]
          print-path=`/print/content/${content.id}`
        />
      </if>
    </div>
  </@section>

  <@section|{ aliases, content, authors }| modifiers=["content-body"]>
    $ const { primarySection } = content;
    <div class="row">
      <div class="col-lg-8">
        <div class="content-page-body">
          <theme-page-contents|{ blockName }| attrs={ "data-gallery-id": id }>
            $ const requiresRegistration = (get(content, "userRegistration.isCurrentlyRequired") || contentGatingHandler({ content, req }));
            $ const accessLevels = getAsArray(content, "userRegistration.accessLevels");
            <marko-web-identity-x-access|context|
              enabled=requiresRegistration
              required-access-level-ids=accessLevels
            >
              <if(!context.canAccess || context.requiresUserInput)>
                $ const body = getContentPreview({ body: content.body, selector: "p:lt(3)" });
                $ const primaryImage = getContentPreview({primaryImage: content.primaryImage, selector: "primaryImage" });
                <theme-primary-image-block
                  obj=content.primaryImage
                  fluid-width=700
                />
                <global-supplier-submitted-block labels=content.labels />
                <marko-web-content-body block-name=blockName obj={ body } />

                <div class="content-page-preview-overlay" />
                <theme-content-page-gate
                  can-access=context.canAccess
                  is-logged-in=context.isLoggedIn
                  has-required-access-level=context.hasRequiredAccessLevel
                  requires-access-level=context.requiresAccessLevel
                  requires-user-input=context.requiresUserInput
                  messages=context.messages
                  button-labels=gateButtonLabels
                  login-email-label=gateEmailLabel
                  title=gateTitle
                  action-text=actionText
                />
              </if>
              <else>
                <if(content.embedCode)>
                  $ const iframeContent = contentIframe(content);
                  <marko-web-content-embed-code block-name=blockName obj=iframeContent />
                  <if(content.transcript)>
                    <marko-web-link href=`#transcript-${id}` class="btn btn-transcript mt-block mb-2" title="Transcript">
                      <marko-web-icon name="file" modifiers=["lg"] /> Transcript
                    </marko-web-link>
                  </if>
                </if>
                <else-if(type === "media-gallery")>
                  <!-- <marko-web-image-slider images=images /> -->
                </else-if>
                <else-if(displayPrimaryImage)>
                  $ let forceDisplay;
                  $ if (type === "contact") forceDisplay = "left";
                  $ if (type === "video") forceDisplay = "none";
                  <theme-primary-image-block
                    obj=content.primaryImage
                    force-display=forceDisplay
                    fluid-width=700
                  />
                </else-if>
                $ const bodyId = `content-body-${content.id}`;

                <global-supplier-submitted-block labels=content.labels />
                <theme-body-with-injection
                  content=content
                  aliases=aliases
                  block-name=blockName
                  selector=bodyId
                  preventHTMLInjection=!shouldInjectAds
                />
                <if(content.transcript)>
                  $ const transcriptId = `content-transcript-${content.id}`;
                  <div id=`transcript-${id}` class="page-contents__content-transcript">
                    <marko-web-element block-name="page-contents" name="content-transcript-title">
                      <marko-web-icon name="file" modifiers=["lg"] /> Transcript
                    </marko-web-element>
                    <theme-body-with-injection
                      content={ body: content.transcript }
                      aliases=aliases
                      block-name=blockName
                      selector=transcriptId
                      preventHTMLInjection=!shouldInjectAds
                    />
                  </div>
                </if>

                <!-- needs input -->
                <if(input.afterBody)>
                  <${input.afterBody}
                    aliases=aliases
                    block-name=blockName
                    content=content
                  />
                </if>

                <if(context.canAccess && !context.requiresUserInput)>
                  $ const sidebars = getAsArray(content, "sidebars").map((sidebar) => sidebar.body);
                  <marko-web-content-sidebars block-name=blockName obj={ sidebars } />
                </if>

                <if(leadersContentTypes.includes(content.type))>
                  <marko-web-leaders-featured-companies content=content />
                </if>

                <if(type === "document" || type === "whitepaper")>
                  <theme-content-download obj=content>
                    <@wufoo user-name=site.get("wufoo.userName") />
                    <@link class="btn btn-primary" />
                  </theme-content-download>
                </if>

                <if(type !== "contact")>
                  <for|author| of=authors>
                    <if(getAsArray(author, "labels").includes("Contributor"))>
                      <marko-web-content-body obj=author block-name="inline-author-bio" />
                    </if>
                  </for>
                </if>

                <if(displayReadNext)>
                  <theme-read-next-block
                    content-id=id
                    section-id=primarySection.id
                    published=content.published
                  />
                </if>

                <if(displaySocialShare)>
                  <marko-web-social-sharing
                    path=content.siteContext.path
                    providers=["print", "facebook", "linkedin", "twitter", "pinterest"]
                    print-path=`/print/content/${content.id}`
                  />
                </if>

                <if(leadersContentTypes.includes(content.type))>
                  <marko-web-leaders-company-videos content-id=content.id />
                </if>

                <!-- Div for BI Library -->
                <marko-web-gtm-slot prefix=site.get("gtm.slotPrefix") name="article-bilibrary" class="mt-3" />

                <theme-gam-define-display-ad
                  name="inline-content"
                  position="content_page"
                  aliases=aliases
                  modifiers=["inline-content"]
                />

                <if(displayNewsletterSignup)>
                  <marko-web-identity-x-context|{ hasUser }|>
                    <if(!hasUser)>
                      <identity-x-newsletter-form-inline
                        button-labels=buttonLabels
                        login-email-label=loginEmailLabel
                        login-email-placeholder="example@yourcompany.com"
                        type="inlineContent"
                        action-text=actionText
                      />
                    </if>
                  </marko-web-identity-x-context>
                </if>

              </else>
            </marko-web-identity-x-access>

            <if(displayComments)>
              <theme-identity-x-comment-stream content=content />
            </if>
          </theme-page-contents>
        </div>
      </div>
      <div class="col-lg-4">
        <if(content.company && content.company.enableRmi)>
          <div class="mb-block">
            <theme-company-inquiry-form-block content=content initially-expanded=false consent-checkboxes=getAsArray(site, 'config.inquiry.consentCheckboxes') />
          </div>
        </if>
        <global-leaders-contextual content-id=id />
      </div>
    </div>
  </@section>

  <@section|{ content }|>
    <theme-related-stories-block
      content-id=content.id
      section-id=content.primarySection.id
      published=content.published
      with-native-x=true
    />
  </@section>

  <if(showBottomAdBlock)>
    <@section|{ aliases }|>
      <theme-gam-define-display-ad
        name="rotation"
        position="content_page"
        aliases=aliases
        modifiers=["inter-block"]
      />
    </@section>
  </if>

  <if(showTopStoryBlock)>
    <@section>
      <theme-top-stories-block />
    </@section>
  </if>

  <for|s| of=sections>
    <@section|{ blockName, content, aliases }| modifiers=s.modifiers>
      <${s.renderBody}
        block-name=blockName
        content=content
        aliases=aliases
      />
    </@section>
  </for>
</global-content-wrapper-layout>
