import hierarchyAliases from "@parameter1/base-cms-marko-web/utils/hierarchy-aliases";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";
import { getAsArray } from "@parameter1/base-cms-object-path";
import queryFragment from "@parameter1/base-cms-marko-web-theme-monorail/graphql/fragments/section-feed-block";

$ const { site, req, i18n, pagination: p } = out.global;
$ const { name, description, queryParams: paginationParams } = input;
$ const perPage = 12;
$ const continueLabel = i18n("Sign Me Up!");
$ const loginEmailLabel = i18n("Work Email");
$ const buttonLabels = { continue: continueLabel };
$ const actionText = i18n("signing up to receive your email notifications");
$ const queryName = defaultValue(input.queryName, "all-published-content");

$ const queryParams = {
  limit: 3,
  skip: p.skip({ perPage }),
  ...paginationParams,
  queryFragment,
};

<marko-web-default-page-layout type="website-section" title=name description=description>
  <@page>
    <marko-web-page-wrapper>
      <@section modifiers=["first"]>
        <theme-gam-define-display-ad
          name="leaderboard"
          position="section_page"
          modifiers=["inter-block"]
        />
      </@section>

      <@section|{ blockName }|>
        <div class="row">
          <div class="col-lg-12">
            <marko-web-website-section-name|{ value }| tag="h1" block-name=blockName obj={ name }>
              <if(p.page > 1)>${value}: ${i18n("Page")} ${p.page}</if>
              <else>${value}</else>
            </marko-web-website-section-name>
            <marko-web-website-section-description obj={ description } attrs={ style: "margin-bottom: 20px" } />
            <marko-web-query|{ nodes }| name=queryName params=queryParams>
              <marko-web-node-list
                flush-x=true
                flush-y=false
                modifiers=["section-feed"]
              >
                <@nodes nodes=nodes>
                  <@slot|{ node }|>
                    $ if (["event", "podcast", "webinar"].includes(node.type)) {
                      const typeName = `${node.type.slice(0,1).toUpperCase()}${node.type.slice(1)}`;
                      node.primarySection = {
                        name: `${typeName}s`,
                        fullName: `${typeName}s`,
                        alias: `${node.type}s`,
                        canonicalPath: `/${node.type}s`,
                      }
                    }
                    <theme-section-feed-content-node node=node />
                  </@slot>
                </@nodes>
              </marko-web-node-list>
            </marko-web-query>
          </div>
        </div>
      </@section>

      <@section>
        <theme-gam-define-display-ad
          name="rotation"
          position="section_page"
          modifiers=["inter-block"]
        />
      </@section>

      <@section|{ blockName }|>
        <div class="row">
          <div class="col-lg-12">
            $ queryParams.skip = p.skip({ perPage, skip: 3 });
            <marko-web-query|{ nodes }| name=queryName params=queryParams>
              <marko-web-node-list
                flush-x=true
                flush-y=false
                modifiers=["section-feed"]
              >
                <@nodes nodes=nodes>
                  <@slot|{ node }|>
                    $ if (["event", "podcast", "webinar"].includes(node.type)) {
                      const typeName = `${node.type.slice(0,1).toUpperCase()}${node.type.slice(1)}`;
                      node.primarySection = {
                        name: `${typeName}s`,
                        fullName: `${typeName}s`,
                        alias: `${node.type}s`,
                        canonicalPath: `/${node.type}s`,
                      }
                    }
                    <theme-section-feed-content-node node=node />
                  </@slot>
                </@nodes>
              </marko-web-node-list>
            </marko-web-query>
          </div>
        </div>
      </@section>

      <@section>
        <marko-web-identity-x-context|{ hasUser }|>
          <if(!hasUser)>
            <identity-x-newsletter-form-inline
              button-labels=buttonLabels
              login-email-label=loginEmailLabel
              login-email-placeholder="example@yourcompany.com"
              type="inlineSection"
              action-text=actionText
            />
          </if>
        </marko-web-identity-x-context>
      </@section>


      <@section|{ blockName }|>
        <div class="row">
          <div class="col-lg-12">
            $ queryParams.skip = p.skip({ perPage, skip: 6 });
            <marko-web-query|{ nodes }| name=queryName params=queryParams>
              <marko-web-node-list
                flush-x=true
                flush-y=false
                modifiers=["section-feed"]
              >
                <@nodes nodes=nodes>
                  <@slot|{ node }|>
                    $ if (["event", "podcast", "webinar"].includes(node.type)) {
                      const typeName = `${node.type.slice(0,1).toUpperCase()}${node.type.slice(1)}`;
                      node.primarySection = {
                        name: `${typeName}s`,
                        fullName: `${typeName}s`,
                        alias: `${node.type}s`,
                        canonicalPath: `/${node.type}s`,
                      }
                    }
                    <theme-section-feed-content-node node=node />
                  </@slot>
                </@nodes>
              </marko-web-node-list>
            </marko-web-query>
          </div>
        </div>
      </@section>

      <@section>
        <theme-gam-define-display-ad
          name="rotation"
          position="section_page"
          modifiers=["inter-block"]
        />
      </@section>

      <@section|{ blockName }|>
        <div class="row">
          <div class="col-lg-12">
            $ queryParams.skip = p.skip({ perPage, skip: 9 });
            <marko-web-query|{ nodes }| name=queryName params=queryParams>
              <marko-web-node-list
                flush-x=true
                flush-y=false
                modifiers=["section-feed"]
              >
                <@nodes nodes=nodes>
                  <@slot|{ node }|>
                    $ if (["event", "podcast", "webinar"].includes(node.type)) {
                      const typeName = `${node.type.slice(0,1).toUpperCase()}${node.type.slice(1)}`;
                      node.primarySection = {
                        name: `${typeName}s`,
                        fullName: `${typeName}s`,
                        alias: `${node.type}s`,
                        canonicalPath: `/${node.type}s`,
                      }
                    }
                    <theme-section-feed-content-node node=node />
                  </@slot>
                </@nodes>
              </marko-web-node-list>
            </marko-web-query>
            <theme-query-total-count|{ totalCount }| name=queryName params=paginationParams>
              <theme-pagination-controls
                per-page=perPage
                total-count=totalCount
                path=req.path
              />
            </theme-query-total-count>
          </div>
        </div>
      </@section>

      <@section>
        <theme-gam-define-display-ad
          name="rotation"
          position="section_page"
          modifiers=["inter-block"]
        />
      </@section>

      <@section>
        <theme-top-stories-block query-params={ optionName: "Pinned" } />
      </@section>

      <@section|{ aliases }|>
        <theme-native-x-promo-card-block placement-name="marketing" aliases=aliases />
      </@section>

      <@section>
        $ const defaultParams = {
            queryParams: { includeContentTypes: ["Product"] },
            section: { name: "Products", canonicalPath: "/products" },
        };
        $ const productsParams = defaultValue(site.get("productsParams"), defaultParams);
        <theme-content-card-list-block ...productsParams />
      </@section>

      <@section>
        <global-client-side-most-popular-block />
      </@section>

      $ const publicationIds = site.getAsArray("magazine.publicationIds");
      <if(publicationIds.length)>
        <@section>
          <theme-magazine-issues-block publication-id=publicationIds[0] />
        </@section>
      </if>

      <@section>
        <theme-content-card-deck-block
          query-params={ includeContentTypes: ["Document"], limit: 4 }
          section={ name: `${i18n("Downloads")}`, canonicalPath: "/downloads" }
        />
      </@section>

      <@section|{ aliases }|>
        <theme-gam-define-display-ad
          name="rotation"
          position="section_page"
          aliases=aliases
          modifiers=["inter-block"]
        />
      </@section>

    </marko-web-page-wrapper>
  </@page>
</marko-web-default-page-layout>
